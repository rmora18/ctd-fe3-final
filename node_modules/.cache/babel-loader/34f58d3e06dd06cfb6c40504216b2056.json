{"ast":null,"code":"import utils from \"../utils.js\";\n\nconst callbackify = (fn, reducer) => {\n  return utils.isAsyncFn(fn) ? function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const cb = args.pop();\n    fn.apply(this, args).then(value => {\n      try {\n        reducer ? cb(null, ...reducer(value)) : cb(null, value);\n      } catch (err) {\n        cb(err);\n      }\n    }, cb);\n  } : fn;\n};\n\nexport default callbackify;","map":{"version":3,"names":["utils","callbackify","fn","reducer","isAsyncFn","args","cb","pop","apply","then","value","err"],"sources":["C:/Users/nayit/OneDrive/Desktop/DH/6Bimentre/Frontend III/ctd-fe3-final/fe3-final/node_modules/axios/lib/helpers/callbackify.js"],"sourcesContent":["import utils from \"../utils.js\";\n\nconst callbackify = (fn, reducer) => {\n  return utils.isAsyncFn(fn) ? function (...args) {\n    const cb = args.pop();\n    fn.apply(this, args).then((value) => {\n      try {\n        reducer ? cb(null, ...reducer(value)) : cb(null, value);\n      } catch (err) {\n        cb(err);\n      }\n    }, cb);\n  } : fn;\n}\n\nexport default callbackify;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAKC,OAAL,KAAiB;EACnC,OAAOH,KAAK,CAACI,SAAN,CAAgBF,EAAhB,IAAsB,YAAmB;IAAA,kCAANG,IAAM;MAANA,IAAM;IAAA;;IAC9C,MAAMC,EAAE,GAAGD,IAAI,CAACE,GAAL,EAAX;IACAL,EAAE,CAACM,KAAH,CAAS,IAAT,EAAeH,IAAf,EAAqBI,IAArB,CAA2BC,KAAD,IAAW;MACnC,IAAI;QACFP,OAAO,GAAGG,EAAE,CAAC,IAAD,EAAO,GAAGH,OAAO,CAACO,KAAD,CAAjB,CAAL,GAAiCJ,EAAE,CAAC,IAAD,EAAOI,KAAP,CAA1C;MACD,CAFD,CAEE,OAAOC,GAAP,EAAY;QACZL,EAAE,CAACK,GAAD,CAAF;MACD;IACF,CAND,EAMGL,EANH;EAOD,CATM,GASHJ,EATJ;AAUD,CAXD;;AAaA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}